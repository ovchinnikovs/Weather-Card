{"version":3,"sources":["Icon/types.js","Icon/Icon.js","utils.js","WeatherCard/WeatherCard.js","App/App.js","index.js"],"names":["WEATHER_ICONS_BY_TYPE","rain","clear","clouds","unknown","Icon","type","weatherType","this","props","react_default","a","createElement","className","concat","iconSize","small","medium","large","size","React","Component","getDateFromDT","dt","format","moment","WeatherCard","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","weather","fetch","json","data","setState","list","console","log","weatherToday","Fragment","city","name","Math","round","temp","day","Icon_Icon","main","toLowerCase","map","index","key","floor","App","WeatherCard_WeatherCard_WeatherCard","ReactDOM","render","src_App_App","document","getElementById"],"mappings":"0UAAMA,EAAwB,CAC1BC,KAAM,OACNC,MAAO,QACPC,OAAQ,SACRC,QAAS,WCAQC,mLAYR,IDTwBC,ECUrBC,EAAgBC,KAAKC,MAArBF,YAER,OACIG,EAAAC,EAAAC,cAAA,KAAGC,UAAS,wBAAAC,OAA0BN,KAAKO,SAA/B,QAAAD,QDbaR,ECasDC,EDZhFP,EAAsBM,GAAQ,gDCKjC,MANc,CACVU,MAAO,KACPC,OAAQ,KACRC,MAAO,OAJMV,KAAKC,MAAdU,MAOa,gBATKC,IAAMC,oCCA3BC,EAAgB,SAACC,EAAIC,GAC9B,OAAOC,IAAY,IAALF,GAAWC,OAAOA,ICAfE,cACjB,SAAAA,EAAYjB,GAAO,IAAAkB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAApB,KAAAkB,IACfC,EAAAC,OAAAE,EAAA,EAAAF,CAAApB,KAAAoB,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAxB,KAAMC,KAEDwB,MAAQ,CAAEC,QAAS,IAHTP,mNAOIQ,MAAK,6FAAArB,ODXT,mDCWTsB,kBACaA,EAAKA,cAAlBC,SAEN7B,KAAK8B,SAAS,CAAEJ,QAASG,uIAGpB,IAEGH,EAAY1B,KAAKyB,MAAjBC,QAER,IAAKA,EAAQK,KACT,OAAO7B,EAAAC,EAAAC,cAAA,yBAEX4B,QAAQC,IAAIP,GACZ,IAAMQ,EAAeR,EAAQK,KAAK,GAElC,OACI7B,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgC,SAAA,KACIjC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQS,EAAcoB,EAAanB,GAAI,gBACtDb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQqB,EAAQU,KAAKC,OAGxCnC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQiC,KAAKC,MAAML,EAAaM,KAAKC,KAApD,QACAvC,EAAAC,EAAAC,cAACsC,EAAD,CAAM/B,KAAK,QAAQZ,YAAamC,EAAaR,QAAQ,GAAGiB,KAAKC,iBAGjE1C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACVqB,EAAQK,KAAKc,IAAI,SAACJ,EAAKK,GAAN,OACd5C,EAAAC,EAAAC,cAAA,OAAK2C,IAAKD,EAAOzC,UAAU,OACvBH,EAAAC,EAAAC,cAAA,WAAMU,EAAcY,EAAQK,KAAKe,GAAO/B,GAAI,QAC5Cb,EAAAC,EAAAC,cAACsC,EAAD,CAAM/B,KAAK,QAAQoC,IAAKD,EAAO/C,YAAa2B,EAAQK,KAAKe,GAAOpB,QAAQ,GAAGiB,KAAKC,gBAChF1C,EAAAC,EAAAC,cAAA,WAAMkC,KAAKU,MAAMtB,EAAQK,KAAKe,GAAON,KAAKC,KAA1C,oBAzCa7B,IAAMC,WCUhCoC,MAVf,WACE,OACE/C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,WAASC,UAAU,WACjBH,EAAAC,EAAAC,cAAC8C,EAAD,SCHRC,IAASC,OAAOlD,EAAAC,EAAAC,cAACiD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.3f8008c3.chunk.js","sourcesContent":["const WEATHER_ICONS_BY_TYPE = {\n    rain: \"rain\",\n    clear: \"clear\",\n    clouds: \"cloudy\",\n    unknown: \"unknown\"\n};\n\nexport const getIconByWeatherType = (type) => {\n    return WEATHER_ICONS_BY_TYPE[type || 'unknown'];\n}","import React from 'react';\n\nimport { getIconByWeatherType } from './types';\n\nexport default class Icon extends React.Component {\n    get iconSize() {\n        const { size } = this.props;\n        const sizes = {\n            small: '32',\n            medium: '64',\n            large: '128',\n        };\n\n        return sizes[size || 'small'];\n    }\n\n    render() {\n        const { weatherType } = this.props;\n\n        return (\n            <i className={`wu wu-solid-black wu-${this.iconSize} wu-${getIconByWeatherType(weatherType)}`} />\n        );\n    }\n}\n","import moment from 'moment';\n\nexport const API_KEY = \"47fe20af59af3bbf2a3b306a18fdb1d7\";\n\nexport const getDateFromDT = (dt, format) => {\n    return moment(dt * 1000).format(format);\n}\n","import React from 'react';\nimport Icon from '../Icon/index'\nimport './WeatherCard.css'\nimport { API_KEY, getDateFromDT } from '../utils';\n\nexport default class WeatherCard extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { weather: {} };\n    }\n\n    async componentDidMount() {\n        const json = await fetch(`https://api.openweathermap.org/data/2.5/forecast/daily?q=Kharkiv&units=metric&cnt=7&appid=${API_KEY}`);\n        const data = await json.json();\n\n        this.setState({ weather: data });\n    }\n\n    render() {\n        \n        const { weather } = this.state;\n        \n        if (!weather.list) {\n            return <div>Loading...</div>;\n        }\n        console.log(weather)\n        const weatherToday = weather.list[1];\n\n        return (\n            <>\n                <div className=\"text-content\">\n                    <div className=\"date\">{getDateFromDT(weatherToday.dt, 'MMMM D dddd')}</div>\n                    <div className=\"city\">{weather.city.name}</div>\n                </div>\n\n                <div className=\"temp-content\">\n                    <div className=\"temp\">{Math.round(weatherToday.temp.day)}°</div>\n                    <Icon size=\"large\" weatherType={weatherToday.weather[0].main.toLowerCase()} />\n                </div>\n\n                <div className=\"weather-week\">\n                    {weather.list.map((day, index) => \n                        <div key={index} className=\"day\">\n                            <div>{getDateFromDT(weather.list[index].dt, 'ddd')}</div>\n                            <Icon size=\"small\" key={index} weatherType={weather.list[index].weather[0].main.toLowerCase()} />\n                            <div>{Math.floor(weather.list[index].temp.day)}°</div>\n                        </div>\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n","import React from 'react';\nimport './App.css';\n\nimport WeatherCard from '../WeatherCard/index';\n\nfunction App() {\n  return (\n    <div className=\"base\">\n      <section className=\"content\">\n        <WeatherCard />\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './Icon/wu-icons-style.min.css';\nimport App from './App/index';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}